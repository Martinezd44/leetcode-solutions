class Solution {
    public TreeNode sortedArrayToBST(int[] nums) {
        return build(nums,0,nums.length-1);
    }
    private TreeNode build (int[] nums, int l, int r){
        if (l>r){
            return null; //This is the base case
        }
        int mid = l + (r-l)/2; //it chooses the middle index as the head 
        TreeNode root = new TreeNode (nums[mid]); //makes the root node for array
        root.left = build(nums,l,mid-1);//recursive build left subtree
        root.right = build(nums, mid +1, r);//recursive build for right subtree
        return root;
    }
}