// Time complexity is O(n^3) :D
class Solution {
    public String longestPalindrome(String s) { // this is the two pointer method that uses two for loops
        for (int len = s.length(); len>0; len--){
            for (int start = 0; start<=s.length() - len; start++){
                if (check(start ,start + len,s)){
                    return s.substring(start,start+len);// goes through the string and uses the Boolean check classs
                }
            }

        }

    
        return "";
    }

    public boolean check (int i , int j, String s){ // Boolean check class will check if its palindromic
        int left = i;
        int right = j-1;
        while (left<right){
            if (s.charAt(left)!=s.charAt(right)){
                return false;
            }
            else {
                left++;
                right--;
            }
    
        }
        return true;
    

    }
}